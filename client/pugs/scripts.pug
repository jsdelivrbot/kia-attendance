script(src="https://code.jquery.com/jquery-3.3.1.min.js")
script(src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js")
script(src='https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js')
script(src='https://cdn.datatables.net/buttons/1.5.2/js/dataTables.buttons.min.js')
script(src='https://cdn.datatables.net/buttons/1.5.2/js/buttons.flash.min.js')
script(src='https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js')
script(src='https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js')
script(src='https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js')
script(src='https://cdn.datatables.net/buttons/1.5.2/js/buttons.html5.min.js')
script(src='https://cdn.datatables.net/buttons/1.5.2/js/buttons.print.min.js')
script(src='https://unpkg.com/axios/dist/axios.min.js')
script.
    $(document).ready(function() {
    // Setup - add a text input to each footer cell
        $('#index-table tfoot th').each( function () {
            var title = $(this).text();
            $(this).html( '<input type="text" placeholder="Search '+title+'" />' );
        });

        // DataTable
        var table = $('#index-table').DataTable({
            dom: 'Blfrtip',
            buttons: [
                {
                    "title": "Kia Attendance Report - " + new Date().toLocaleString(),
                    "extend": 'pdf',
                "text":'Export as PDF',
                "className": 'btn btn-default btn-md m-b' }
            ]
        });

        // Apply the search
        table.columns().every( function () {
            var that = this;

            $( 'input', this.footer() ).on( 'keyup change', function () {
                if ( that.search() !== this.value ) {
                    that.search(this.value).draw();
                }
            });
        });

        $('#generateCustomReport').click(function() {
            console.log('generate Custom report handler')
            let dateFrom = $('#dateFrom').val();
            let dateTo = $('#dateTo').val();
            console.log('dateFrom', dateFrom)
            console.log('dateTo', dateTo)
            dateFrom = new Date(dateFrom)
            dateTo = new Date(dateTo)
            dateFrom.setHours(0)
            dateFrom.setMinutes(0)
            dateFrom.setSeconds(0)
            dateTo.setHours(0)
            dateTo.setMinutes(0)
            dateTo.setSeconds(0)
            console.log('dateFrom', dateFrom)
            console.log('dateTo', dateTo)

            axios.post('/api/attendance/getCustomReport', {
                dateFrom: dateFrom,
                dateTo: dateTo
            }).then(function (response) {
                console.log(response.data.payload);
                let pdfContent = [
                    {text: "Staff's On-Duty/Off-Duty Timetable", style: 'header'},
                    {text: dateFrom.toLocaleDateString() + " - " + dateTo.toLocaleDateString(), style: "subheader"}
                ]
                let tableHeaders = []
                let tableDates = []
                let attendanceData = []
                let numOfColumns = 0
                for (let i = 0; i < response.data.payload.length; i++) {
                    record = response.data.payload[i]
                    if (record.attendanceRecords.length > 0) {
                        record.attendanceRecords.sort((a,b) => {
                            let dateA = new Date(a.date)
                            let dateB = new Date(b.date)
                            if (dateA < dateB) {
                                return -1
                            } else if (dateA > dateB) {
                                return 1
                            } else {
                                return 0
                            }
                        })
                        console.log(record.attendanceRecords)
                        numOfColumns = record.attendanceRecords.length
                        tableHeaders[i] = record.attendanceRecords[0].employeeName + " (ID#" + record.attendanceRecords[0].employeeId +")"

                        for (let attendance of record.attendanceRecords) {
                            if (!tableDates[i]) {
                                tableDates[i] = []
                            }
                            if (!attendanceData[i]) {
                                attendanceData[i] = []
                            }
                            tableDates[i].push(new Date(attendance.date).toLocaleDateString())
                            attendanceData[i].push(attendance.clockIn + " - " + attendance.clockOut)
                        }
                    }
                    let emptyColumns = []
                    for (let j = 0; j < numOfColumns-1; j++) {
                        emptyColumns.push({})
                    }
                    pdfContent.push({
                        style: 'tableExample',
                        table: {
                            body: [
                                [{text: tableHeaders[i], style: 'tableHeader', colSpan: numOfColumns, alignment: 'center'}].concat(emptyColumns),
                                tableDates[i],
                                attendanceData[i]
                            ]
                        }
                    })
                }
                console.log(pdfContent)
                let dd = {
                    content: pdfContent,
                    styles: {
                        header: {
                            fontSize: 18,
                            bold: true,
                            margin: [0, 0, 0, 10]
                        },
                        subheader: {
                            fontSize: 14,
                            bold: true,
                            margin: [0, 10, 0, 5]
                        },
                        tableExample: {
                            margin: [0, 5, 0, 15]
                        },
                        tableHeader: {
                            bold: true,
                            fontSize: 13,
                            color: 'black'
                        }
                    }
                }
                pdfMake.createPdf(dd).download('custom-report-' + dateFrom.toLocaleDateString() + " - " + dateTo.toLocaleDateString() + '.pdf');
            }).catch(function (error) {
                console.log(error);
            });
        });
    });
